{"version":3,"sources":["components/TodoForm.js","images/icon-check.svg","images/icon-cross.svg","components/Todo.js","components/TodoList.js","images/icon-moon.svg","images/icon-sun.svg","components/Header.js","App.js","index.js"],"names":["TodoForm","handleChange","setTodos","todos","inputValue","setinputValue","className","type","placeholder","onChange","value","onClick","e","preventDefault","trim","text","completed","id","Math","random","Todo","todo","React","useState","setCompleted","map","el","src","check","alt","filter","cross","TodoList","status","filteredTodos","setStatus","changeStatus","target","console","log","length","variant","Header","theme","setTheme","sun","moon","App","localStorage","getItem","setfilteredTodos","useEffect","window","setItem","filterTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6c3550b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TodoForm = ({\r\n  handleChange,\r\n  setTodos,\r\n  todos,\r\n  inputValue,\r\n  setinputValue,\r\n}) => {\r\n  const submitTodo = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim() === \"\") {\r\n      return;\r\n    }\r\n    setTodos([\r\n      ...todos,\r\n      { text: inputValue, completed: false, id: Math.random() * 1000 },\r\n    ]);\r\n    setinputValue(\"\");\r\n  };\r\n  return (\r\n    <form className=\"form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Todo\"\r\n        onChange={handleChange}\r\n        value={inputValue}\r\n        className=\"form-input\"\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        onClick={submitTodo}\r\n        className=\"form-button\"\r\n      ></button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React from \"react\";\r\nimport check from \"./../images/icon-check.svg\";\r\nimport cross from \"./../images/icon-cross.svg\";\r\nconst Todo = ({ todo, todos, setTodos }) => {\r\n  const [completed, setCompleted] = React.useState(false);\r\n  const deleteTodo = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n  const completeTodo = () => {\r\n    setTodos(\r\n      todos.map((el) =>\r\n        el.id === todo.id ? { ...el, completed: !el.completed } : el\r\n      )\r\n    );\r\n    setCompleted(!completed);\r\n  };\r\n  return (\r\n    <div className=\"todo-item\">\r\n      <button\r\n        className={\r\n          \" circle-button \" + (todo.completed ? \"bgcolorbutton\" : null)\r\n        }\r\n        onClick={completeTodo}\r\n      >\r\n        {todo.completed && <img src={check} alt=\"check\" />}\r\n      </button>\r\n      <li className={`${completed ? \"completed\" : \"\"}`}> {todo.text}</li>\r\n      <button className=\"delete\" onClick={deleteTodo}>\r\n        <img src={cross} alt=\"cross\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nconst TodoList = ({ todos, setTodos, status, filteredTodos, setStatus }) => {\r\n  const clearTodosCompleted = () => {\r\n    setTodos(todos.filter((todo) => !todo.completed));\r\n  };\r\n  const changeStatus = (e) => {\r\n    setStatus(e.target.value);\r\n    console.log(status);\r\n  };\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"ul-container\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo key={todo.id} todo={todo} todos={todos} setTodos={setTodos} />\r\n        ))}\r\n        {todos.length !== 0 ? (\r\n          <li className=\"todo-item todo-footer\">\r\n            <div>{todos.length} items left</div>\r\n            <div className=\"todo-btns-container\">\r\n              <button\r\n                value=\"All\"\r\n                className={\r\n                  \"todo-btn todo-footer__button \" +\r\n                  (status === \"All\" ? \"choosen\" : null)\r\n                }\r\n                onClick={changeStatus}\r\n              >\r\n                All\r\n              </button>\r\n              <button\r\n                variant=\"contained\"\r\n                value=\"Active\"\r\n                className={\r\n                  \"todo-btn todo-footer__button  \" +\r\n                  (status === \"Active\" ? \"choosen\" : null)\r\n                }\r\n                onClick={changeStatus}\r\n              >\r\n                {\" \"}\r\n                Active\r\n              </button>\r\n              <button\r\n                value=\"Completed\"\r\n                className={\r\n                  \"todo-btn todo-footer__button \" +\r\n                  (status === \"Completed\" ? \"choosen\" : null)\r\n                }\r\n                onClick={changeStatus}\r\n              >\r\n                Completed\r\n              </button>\r\n            </div>\r\n            <button\r\n              className=\"todo-btn todo-footer__button \"\r\n              onClick={clearTodosCompleted}\r\n            >\r\n              Clear Completed\r\n            </button>\r\n          </li>\r\n        ) : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","import React from \"react\";\r\nimport moon from \"./../images/icon-moon.svg\";\r\nimport sun from \"./../images/icon-sun.svg\";\r\nconst Header = ({ theme, setTheme }) => {\r\n  const handleChangeTheme = () => {\r\n    console.log(theme);\r\n    console.log(\"change theme\");\r\n    if (theme === \"light\") {\r\n      setTheme(\"dark\");\r\n    } else {\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"header-container\">\r\n      <h1 className=\"header-title\">TODO</h1>\r\n      <button className=\"btn-theme\" onClick={handleChangeTheme}>\r\n        <img src={theme === \"light\" ? sun : moon} alt=\"theme\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"./styles/index.scss\";\nimport React from \"react\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport Header from \"./components/Header\";\nfunction App() {\n  const [theme, setTheme] = React.useState(\n    localStorage.getItem(\"theme\") || \"light\"\n  );\n  const [todos, setTodos] = React.useState([]);\n  const [inputValue, setinputValue] = React.useState(\"\");\n  const [status, setStatus] = React.useState(\"all\");\n  const [filteredTodos, setfilteredTodos] = React.useState([]);\n  React.useEffect(() => {\n    window.localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n  const filterTodos = () => {\n    console.log(\"enter in filterTodos\");\n    switch (status) {\n      case \"All\":\n        setfilteredTodos(todos);\n        break;\n      case \"Completed\":\n        setfilteredTodos(todos.filter((todo) => todo.completed));\n        break;\n      case \"Active\":\n        setfilteredTodos(todos.filter((todo) => !todo.completed));\n        break;\n      default:\n        setfilteredTodos(todos);\n    }\n  };\n  React.useEffect(() => {\n    filterTodos();\n  }, [todos, status]);\n\n  const handleChange = (e) => {\n    setinputValue(e.target.value);\n  };\n  return (\n    <div className=\"App\">\n      <Header theme={theme} setTheme={setTheme} />\n      <TodoForm\n        value={inputValue}\n        handleChange={handleChange}\n        todos={todos}\n        setTodos={setTodos}\n        inputValue={inputValue}\n        setinputValue={setinputValue}\n      />\n      <TodoList\n        status={status}\n        setStatus={setStatus}\n        todos={todos}\n        filteredTodos={filteredTodos}\n        setTodos={setTodos}\n        filterTodos={filterTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}